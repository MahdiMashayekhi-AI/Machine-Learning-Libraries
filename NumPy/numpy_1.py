# -*- coding: utf-8 -*-
"""Numpy_1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10PJ7Zozqq8gvPrEqSS45kwS63GzOwHBK

# NumPy Library

NumPy is the fundamental package for scientific computing in Python. It is a Python library that provides a multidimensional array object, various derived objects (such as masked arrays and matrices), and an assortment of routines for fast operations on arrays, including mathematical, logical, shape manipulation, sorting, selecting, I/O, discrete Fourier transforms, basic linear algebra, basic statistical operations, random simulation and much more.

## Installing NumPy
"""

!pip install numpy

"""## Importing the NumPy"""

import numpy as np # np is abbreviation

"""## Create an array"""

# 0D
myArr = np.array([1])
print(myArr)

# 1D
myArr = np.array([1, 2, 3, 4, 5, 6, 7, 8])
print(myArr)

# 2D
myArr = np.array([[1, 2, 3, 4],
                  [5, 6, 7, 8]])

print(myArr)

# 3D
myArr = np.array([[[1, 2, 3, 4],
                   [5, 6, 7, 8]],
                  [[1, 2, 3, 4],
                   [5, 6, 7, 8]]])

print(myArr)

"""### Zeros array"""

a = np.zeros(5)
print(a)

a = np.zeros([5, 5])
print(a)

"""### Ones array"""

b = np.ones(5)
print(b)

b = np.ones([5, 5])
print(b)

"""### Empty array"""

c = np.empty(5)
print(c)

c = np.empty([5, 5])
print(c)

"""### Array range"""

d = np.arange(1, 11)
print(d)

d = np.arange(1, 11, 2)
print(d)

"""### Linearly specified """

e = np.linspace(0, 20)
print(e)

e = np.linspace(0, 20, 5)
print(e)

"""## Adding, removing, and sorting elements"""

arr = np.array([2, 1, 5, 3, 7, 4, 6, 8])

"""### Sort"""

np.sort(arr)

"""### Concatenate"""

a = np.array([1, 2, 3, 4])
b = np.array([5, 6, 7, 8])

np.concatenate((a, b))

"""## Shape and size of an array"""

array_example = np.array([[[0, 1, 2, 3],
                           [4, 5, 6, 7]],

                          [[0, 1, 2, 3],
                           [4, 5, 6, 7]],

                          [[0 ,1 ,2, 3],
                           [4, 5, 6, 7]]])

"""### Number of dimensions """

array_example.ndim

"""### Total number of elements"""

array_example.size

"""Shape of an array"""

array_example.shape